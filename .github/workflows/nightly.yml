# Nightly Build & Pre-release
name: "Nightly"

on:
  push:
    branches:
      - 9bit
#  schedule:
#    - cron: '0 5 * * *'

env:
  NIGHTLY_TAG: "v3.0.0-beta"
  NIGHTLY_NAME: "3.0.0-beta"
  NIGHTLY_BODY: |
    This is the current Polished Crystal 3.0.0 *beta* release with some small edits. The assets all have an 8-character "commit hash" at the end to identify the exact code they're built from.

    The **.gbc** assets are ROMs. If you just want to play the game, download the .gbc file and load it in [BGB](https://bgb.bircd.org/), [mGBA](https://mgba.io/), [Gambatte](https://github.com/sinamas/gambatte), or another accurate Game Boy Color emulator. (***Do not use VBA*** or VBA-M.)

    The **.bsp** asset is a [BSP](https://github.com/aaaaaa123456789/bsp) save file patch in case you need to upgrade a save file from an older 3.0.0 beta build, using a patcher like the one for [PokÃ©mon Prism](http://pokemonprism.com/patcher.html).

jobs:
  build:
    name: "Nightly"
    uses: OngoGablogian/polished9bitedit/.github/workflows/build.yml@9bit
  release:
    name: "Nightly / Release"
    runs-on: ubuntu-latest
    needs: build
    steps:
      # SET ENVIRONMENT VARIABLES
      - id: set-env-var
        name: "Set environment variables"
        run: |
          echo "SHORT_SHA=$(echo ${GITHUB_SHA} | cut -c1-8)" >> $GITHUB_ENV

      # INSTALL DEPENDENCIES
      - id: apt-get-depends
        name: "Install dependencies"
        run: |
          sudo apt-get update
          sudo apt-get install bison gcc git make -y;
      
      # CHECKOUT REPOSITORY
      - id: checkout-polished9bitedit
        name: "Checkout OngoGablogian/polished9bitedit"
        uses: actions/checkout@v3
          
      # DOWNLOAD ALL BUILD ARTIFACTS
      - id: download-polishedcrystal
        name: "Download polishedcrystal"
        uses: actions/download-artifact@v3
        with:
          name: "polishedcrystal"
          path: "./build"
      - id: download-polishedcrystal-savepatch
        name: "Download polishedcrystal-savepatch"
        uses: actions/download-artifact@v3
        with:
          name: "polishedcrystal-savepatch"
          path: "./build"
      
      # DELETE OLD RELEASE
      - name: Delete old release
        id: delete_release
        uses: cb80/delrel@latest
        with:
          tag: ${{ env.NIGHTLY_TAG }}
          
      # ADVANCE NIGHTLY TAG TO MASTER
      - name: Advance nightly tag to master
        run: |
          git tag ${{ env.NIGHTLY_TAG }} -f
          git push --tags -f "https://OngoGablogian:$GITHUB_TOKEN@github.com/OngoGablogian/polished9bitedit.git"

      # CREATE NEW RELEASE
      - name: Create new release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.NIGHTLY_TAG }}
          name: ${{ env.NIGHTLY_NAME }}
          body: ${{ env.NIGHTLY_BODY }}
          draft: false
          prerelease: true
          
      # UPLOAD POLISHED CRYSTAL ASSETS
      - name: Upload regular assets
        id: upload
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.NIGHTLY_TAG }}
          files: |
            ./build/polishedcrystaledit-3.0.0-beta-${{ env.SHORT_SHA }}.gbc
          
      # UPLOAD SAVE PATCH
      - name: Upload BSP
        id: upload-bsp
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.NIGHTLY_TAG }}
          files: ./build/polishedcrystaledit-savepatch-3.0.0-beta-${{ env.SHORT_SHA }}.bsp
